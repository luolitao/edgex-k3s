apiVersion: v1
kind: ConfigMap
metadata:
  name: common-config
  labels:
    {{- include "chart.labels" . | nindent 4 }}
data:
  common_config.yaml: |
    all-services:
      Writable:
        LogLevel: INFO
        InsecureSecrets:
          DB:
            SecretName: "redisdb"
            SecretData:
              username: ""
              password: ""
      Service:
        HealthCheckInterval: "10s"
        Host: "localhost"
        ServerBindAddr: "" # Leave blank so default to Host value unless different value is needed.
        MaxResultCount: 1024
        MaxRequestSize: 0 # Not currently used. Defines the maximum size of http request body in bytes
        RequestTimeout: "5s"
        CORSConfiguration:
          EnableCORS: false
          CORSAllowCredentials: false
          CORSAllowedOrigin: "*" # TBD what's the right config for k8s env?
          CORSAllowedMethods: "GET, POST, PUT, PATCH, DELETE"
          CORSAllowedHeaders: "Authorization, Accept, Accept-Language, Content-Language, Content-Type, X-Correlation-ID"
          CORSExposeHeaders: "Cache-Control, Content-Language, Content-Length, Content-Type, Expires, Last-Modified, Pragma, X-Correlation-ID"
          CORSMaxAge: 3600
      
      Database: 
        Host: "edgex-redis" # TBD sync with redis deployment name
        Port: 6379
        Timeout: "5s"
        Type: "redisdb"
      
      MessageBus: # TODO: support mqtt, nats or redis via values.yaml
        Protocol: "tcp"
        Host: "{{ .Values.mqtt.host }}" # TBD sync with mqtt deployment name
        Port: 1883
        Type: "mqtt"
        AuthMode: "none"  # required for redis MessageBus (secure or insecure).
        SecretName: ""
        Optional:
          # Default MQTT Specific options that need to be here to enable environment variable overrides of them
          Qos:  "0" # Quality of Service values are 0 (At most once), 1 (At least once) or 2 (Exactly once)
          KeepAlive: "10" # Seconds (must be 2 or greater)
          Retained: "false"
          AutoReconnect: "true"
          ConnectTimeout: "5" # Seconds
          SkipCertVerify: "true"
    device-services:
      MaxEventSize: 0 # value 0 represents unlimited  maximum event size that can be sent to message bus or core-data
      Writable:
        Reading:
          ReadingUnits: true
        Telemetry:
          Metrics:
            EventsSent: false
            ReadingsSent: false
      Clients:
        core-metadata:
          Protocol: "http"
          Host: "core-metadata"
          Port: {{ .Values.coreMetadata.service.port }}
      Device:
        DataTransform: true
        MaxCmdOps: 128
        MaxCmdValueLen: 256
        ProfilesDir: "/res/profiles"
        DevicesDir: "/res/devices"
        # ProvisionWatchersDir is omitted here since most Device Services don't use it.
        # Those that do will have it in their private config
        EnableAsyncReadings: true
        AsyncBufferSize: 16
        Labels: []
        Discovery:
          Enabled: false
          Interval: "30s"
