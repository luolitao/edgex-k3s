  
mqtt:
  enabled: true
  host: edgex-vernemq
  
# Configuration for Redis
redis:
  # -- Enable redis
  enabled: true
  # -- Redis name
  name: redis
  extraEnvVars: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podLabels: {}
  podAnnotations: {}
  serviceAccountName: ""
  imagePullPolicy: IfNotPresent
  imagePullSecrets:
  #  - name: docker-registry-secret
  #  - name: internal-registry-secret
  initContainers: []
  # Example:
  #
  # - name: wait
  #   image: busybox
  #   command: [ 'sh', '-c', "sleep 20" ]
  priorityClassName:
  ## Redis image
  image:
    # -- Redis repository
    repository: oci.sz9wang.com/dh/redis
    # -- Redis tag
    tag: 7.2.4-alpine
  replicaCount: 1
  password: "" # Set your password for Redis here
  persistence:
    enabled: true
    existingClaim: ""
    storageClassName: kadalu.gluster-storage-dc
    subPath: ""
    accessMode: ReadWriteOnce
    size: 1Gi
    annotations: {}
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  ## set Container Security Context to comply with PSP restricted policy if necessary
  ## each of the conatiner will apply the same security context
  ## containerSecurityContext:{} is initially an empty yaml that you could edit it on demand, we just filled with a common template for convenience
  containerSecurityContext:
    privileged: false
    allowPrivilegeEscalation: false
    seccompProfile:
      type: RuntimeDefault
    runAsNonRoot: true
    capabilities:
      drop:
        - ALL

# Example EdgeX service configuration for core-data
coreData:
  enabled: false
  name: core-data
  replicas: 1
  image:
    repository: oci.sz9wang.com/dh/edgexfoundry/core-data
    tag: 3.1.0
    pullPolicy: IfNotPresent
  service:
    port: 48080
    adminPort: 48081
  configMapName: edgex-core-data-config
  # roleName: edgex-core-data-role
  # roleBindingName: edgex-core-data-role-binding
  # serviceAccountName: edgex-core-data-service-account

# Example EdgeX service configuration for core-metadata
coreMetadata:
  enabled: true
  image:
    repository: "oci.sz9wang.com/dh/edgexfoundry/core-metadata"
    tag: "3.1.0"  # Replace with the appropriate version
  replicas: 2
  resources:
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1"
  service:
    port: 48090
    adminPort: 48091
coreCommand:
  enabled: true
  image:
    repository: "oci.sz9wang.com/dh/edgexfoundry/core-command"
    tag: "3.1.0"  # Specify the version of core-command
    pullPolicy: IfNotPresent
  replicas: 2
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  service:
    port: 48070
    adminPort: 48073
  security:
    secretStore: false

supportScheduler:
  enabled: true
  image:
    repository: "oci.sz9wang.com/dh/edgexfoundry/support-scheduler"
    tag: "3.1.0"  # Specify the version of support-scheduler
    pullPolicy: IfNotPresent
  replicas: 2
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  service:
    port: 48085
    adminPort: 48086
  security:
    secretStore: false

ekuiper:
  enabled: true
  image:
    repository: "oci.sz9wang.com/dh/lfedge/ekuiper"
    tag: 1.7.0
    pullPolicy: IfNotPresent
  replicas: 1
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  service:
    port: 48086
    adminPort: 48087

supportNotification:
  enabled: true
  replicaCount: 1
  image:
    repository: oci.sz9wang.com/dh/edgexfoundry/support-notifications
    tag: 3.1.0
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 48088
  resources:
    requests:
      memory: "64Mi"
      cpu: "250m"
    limits:
      memory: "128Mi"
      cpu: "500m"
